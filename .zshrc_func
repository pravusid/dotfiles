RED='\033[0;31m'
YELLOW='\033[0;33m'
NC='\033[0m'

funcs() {
  cat ~/.zshrc_func | grep '^#@'
}

#@ mpeg-dn <input> <output>
mpeg-dn() {
  ffmpeg -i "$1" -c copy -bsf:a aac_adtstoasc "$2"
}

#@ port-scan <host> <port>
port-scan() {
  HOST=$1
  PORT=$2
  echo -e "${YELLOW}nc -z -v $HOST $PORT${NC}"
  nc -z -v $HOST $PORT
}

#@ port-kill <port>
port-kill() {
  lsof -ti :$1 | xargs -r -I {} kill -9 {}
  echo "${RED}kill port $1${NC}"
}

# https://pravusid.kr/wiki/Docker/docker-volume.html
#@ docker-vol ls
#@ docker-vol clean
docker-vol() {
  if [[ $1 == "ls" ]]; then
    docker ps -a --format '{{ .ID }}' |
      xargs -I {} docker inspect -f '{{ .Name }}{{ range .Mounts }}{{ printf "\n\t" }}{{ .Type }} {{ if eq .Type "bind" }}{{ .Source }}{{ end }}{{ .Name }} => {{ .Destination }}{{ end }}{{ printf "\n" }}' {}
  elif [[ $1 == "clean" ]]; then
    docker volume rm $(docker volume ls -qf dangling=true)
  else
    echo "unknown command"
  fi
}

#@ fd-nm -- 하위경로의 node_modules 디렉토리 검색
fd-nm() {
  if [[ -x "$(command -v fd)" ]]; then
    echo -e "${YELLOW}fd -H -I -t d --prune \"node_modules\"${NC}"
    fd -H -I -t d --prune "node_modules"
  else
    echo -e "${YELLOW}find . -name \"node_modules\" -type d -prune${NC}"
    find . -name 'node_modules' -type d -prune
  fi
}

# https://help.dropbox.com/sync/ignored-files

#@ dropbox-ignore <path>
dropbox-ignore() {
  if [[ $(uname) == "Linux" ]]; then
    attr -s com.dropbox.ignored -V 1 $1
  elif [[ $(uname) == "Darwin" ]]; then
    xattr -w "com.apple.fileprovider.ignore#P" 1 $1
  fi
}

#@ dropbox-unignore <path>
dropbox-unignore() {
  if [[ $(uname) == "Linux" ]]; then
    attr -r com.dropbox.ignored $1
  elif [[ $(uname) == "Darwin" ]]; then
    xattr -d "com.apple.fileprovider.ignore#P" $1
  fi
}

#@ du-sorted -- 현재경로의 디렉토리 용량순서대로 출력
du-sorted() {
  echo -e "${YELLOW}du -kh -d1 | sort -rh${NC}"
  du -kh -d1 | sort -rh
}

#@ jless <path> -- jq & less
jless() {
  jq -C -R '. as $raw | try fromjson catch $raw' $1 | less -R
}
